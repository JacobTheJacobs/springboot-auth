{"version":3,"sources":["reducers/auth.js","reducers/message.js","reducers/users.js","reducers/index.js","actions/types.js","store.js","services/auth.service.js","components/login.component.js","actions/auth.js","components/register.component.js","services/auth-header.js","services/user.service.js","components/home.component.js","components/profile.component.js","components/board-user.component.js","components/board-moderator.component.js","services/all-users.service.js","components/board-admin.component.js","components/user-details.component.js","components/add-new-user.component.js","actions/users.js","helpers/history.js","App.js","actions/message.js","serviceWorker.js","index.js"],"names":["user","JSON","parse","localStorage","getItem","initialState","isLoggedIn","users","combineReducers","auth","state","action","type","payload","message","middleware","thunk","store","createStore","rootReducer","composeWithDevTools","applyMiddleware","API_URL","username","password","axios","post","then","response","data","accessToken","setItem","stringify","removeItem","email","required","value","className","role","Login","props","handleLogin","bind","onChangeUsername","onChangePassword","loading","e","this","setState","target","preventDefault","form","validateAll","dispatch","history","checkBtn","context","_errors","length","AuthService","login","Promise","resolve","error","toString","reject","push","window","location","reload","catch","to","src","alt","onSubmit","ref","c","htmlFor","name","onChange","validations","disabled","style","display","Component","connect","isEmail","vusername","vpassword","Register","handleRegister","onChangeEmail","successful","register","authHeader","Authorization","get","headers","Home","content","UserService","getPublicContent","Profile","currentUser","id","BoardUser","getUserBoard","BoardModerator","getModeratorBoard","userId","delete","console","log","put","BoardAdmin","deleteUser","numberofObjects","Object","keys","selected","objKeys","AllUsersService","i","forEach","key","updateUser","listOfUsers","sortingOrder","selectAll","sortedKey","sort","a","b","localeCompare","newSelected","assign","x","getAllUsers","tempListOfUsers","res","scope","aria-label","checked","input","indeterminate","toggleSelectAll","onClick","sortBy","cursor","map","_","toggleRow","confirm","UserDetails","saveUser","match","params","getUserById","aria-describedby","float","vemail","AddUser","handleAdd","createNewUser","createBrowserHistory","App","logOut","showModeratorBoard","showAdminBoard","undefined","listen","roles","includes","logout","width","data-toggle","data-target","aria-controls","aria-expanded","href","exact","path","component","Boolean","hostname","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.30e36051.chunk.js","sourcesContent":["import {\r\n  REGISTER_SUCCESS,\r\n  REGISTER_FAIL,\r\n  LOGIN_SUCCESS,\r\n  LOGIN_FAIL,\r\n  LOGOUT,\r\n} from \"../actions/types\";\r\n\r\nconst user = JSON.parse(localStorage.getItem(\"user\"));\r\n\r\nconst initialState = user\r\n  ? { isLoggedIn: true, user }\r\n  : { isLoggedIn: false, user: null };\r\n\r\nexport default function (state = initialState, action) {\r\n  const { type, payload } = action;\r\n\r\n  switch (type) {\r\n    case REGISTER_SUCCESS:\r\n      return {\r\n        ...state,\r\n        isLoggedIn: false,\r\n      };\r\n    case REGISTER_FAIL:\r\n      return {\r\n        ...state,\r\n        isLoggedIn: false,\r\n      };\r\n    case LOGIN_SUCCESS:\r\n      return {\r\n        ...state,\r\n        isLoggedIn: true,\r\n        user: payload.user,\r\n      };\r\n    case LOGIN_FAIL:\r\n      return {\r\n        ...state,\r\n        isLoggedIn: false,\r\n        user: null,\r\n      };\r\n    case LOGOUT:\r\n      return {\r\n        ...state,\r\n        isLoggedIn: false,\r\n        user: null,\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","import { SET_MESSAGE, CLEAR_MESSAGE } from \"../actions/types\";\r\n\r\nconst initialState = {};\r\n\r\nexport default function (state = initialState, action) {\r\n  const { type, payload } = action;\r\n\r\n  switch (type) {\r\n    case SET_MESSAGE:\r\n      return { message: payload };\r\n\r\n    case CLEAR_MESSAGE:\r\n      return { message: \"\" };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","import {\r\n  GET_USERS,\r\n  GET_USER_BY_ID,\r\n  ADD_USER,\r\n  UPDATE_USER,\r\n  DELETE_USER,\r\n} from \"../actions/types\";\r\n\r\nconst initialState = {\r\n  users: [],\r\n  user: {},\r\n};\r\n\r\nexport default function (state = initialState, action) {\r\n  const { type, payload } = action;\r\n\r\n  switch (type) {\r\n    case GET_USERS:\r\n      return {\r\n        ...state,\r\n        users: payload,\r\n      };\r\n    case GET_USER_BY_ID:\r\n      return {\r\n        ...state,\r\n        user: payload,\r\n      };\r\n    case ADD_USER:\r\n      return {\r\n        ...state,\r\n        user: payload,\r\n      };\r\n    case UPDATE_USER:\r\n      return {\r\n        ...state,\r\n        user: payload,\r\n      };\r\n    case DELETE_USER:\r\n      return {\r\n        ...state,\r\n        user: null,\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","import { combineReducers } from \"redux\";\r\nimport auth from \"./auth\";\r\nimport message from \"./message\";\r\nimport users from \"./users\";\r\n\r\nexport default combineReducers({\r\n  auth,\r\n  message,\r\n  users,\r\n});\r\n","export const REGISTER_SUCCESS = \"REGISTER_SUCCESS\";\r\nexport const REGISTER_FAIL = \"REGISTER_FAIL\";\r\nexport const LOGIN_SUCCESS = \"LOGIN_SUCCESS\";\r\nexport const LOGIN_FAIL = \"LOGIN_FAIL\";\r\nexport const LOGOUT = \"LOGOUT\";\r\n\r\nexport const SET_MESSAGE = \"SET_MESSAGE\";\r\nexport const CLEAR_MESSAGE = \"CLEAR_MESSAGE\";\r\n\r\nexport const GET_USERS = \"GET_USERS\";\r\nexport const GET_USER_BY_ID = \"GET_USER_BY_ID\";\r\nexport const ADD_USER = \"ADD_USER\";\r\nexport const UPDATE_USER = \"UPDATE_USER\";\r\nexport const DELETE_USER = \"DELETE_USER\";\r\n","import { createStore, applyMiddleware } from \"redux\";\r\nimport { composeWithDevTools } from \"redux-devtools-extension\";\r\nimport thunk from \"redux-thunk\";\r\nimport rootReducer from \"./reducers\";\r\n\r\nconst middleware = [thunk];\r\n\r\nconst store = createStore(\r\n  rootReducer,\r\n  composeWithDevTools(applyMiddleware(...middleware))\r\n);\r\n\r\nexport default store;\r\n","import axios from \"axios\";\r\n\r\nconst API_URL = \"http://localhost:8080/api/auth/\";\r\n\r\nclass AuthService {\r\n  login(username, password) {\r\n    return axios\r\n      .post(API_URL + \"signin\", { username, password })\r\n      .then((response) => {\r\n        if (response.data.accessToken) {\r\n          localStorage.setItem(\"user\", JSON.stringify(response.data));\r\n        }\r\n\r\n        return response.data;\r\n      });\r\n  }\r\n\r\n  logout() {\r\n    localStorage.removeItem(\"user\");\r\n  }\r\n\r\n  register(username, email, password) {\r\n    return axios.post(API_URL + \"signup\", {\r\n      username,\r\n      email,\r\n      password,\r\n    });\r\n  }\r\n}\r\n\r\nexport default new AuthService();\r\n","import React, { Component } from \"react\";\r\nimport { Redirect } from \"react-router-dom\";\r\n\r\nimport Form from \"react-validation/build/form\";\r\nimport Input from \"react-validation/build/input\";\r\nimport CheckButton from \"react-validation/build/button\";\r\n\r\nimport { connect } from \"react-redux\";\r\nimport { login } from \"../actions/auth\";\r\n\r\nconst required = (value) => {\r\n  if (!value) {\r\n    return (\r\n      <div className=\"alert alert-danger\" role=\"alert\">\r\n        This field is required!\r\n      </div>\r\n    );\r\n  }\r\n};\r\n\r\nclass Login extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.handleLogin = this.handleLogin.bind(this);\r\n    this.onChangeUsername = this.onChangeUsername.bind(this);\r\n    this.onChangePassword = this.onChangePassword.bind(this);\r\n\r\n    this.state = {\r\n      username: \"demo\",\r\n      password: \"demodemo\",\r\n      loading: false,\r\n    };\r\n  }\r\n\r\n  onChangeUsername(e) {\r\n    this.setState({\r\n      username: e.target.value,\r\n    });\r\n  }\r\n\r\n  onChangePassword(e) {\r\n    this.setState({\r\n      password: e.target.value,\r\n    });\r\n  }\r\n\r\n  handleLogin(e) {\r\n    e.preventDefault();\r\n\r\n    this.setState({\r\n      loading: true,\r\n    });\r\n\r\n    this.form.validateAll();\r\n\r\n    const { dispatch, history } = this.props;\r\n\r\n    if (this.checkBtn.context._errors.length === 0) {\r\n      dispatch(login(this.state.username, this.state.password))\r\n        .then(() => {\r\n          history.push(\"/profile\");\r\n          window.location.reload();\r\n        })\r\n        .catch(() => {\r\n          this.setState({\r\n            loading: false,\r\n          });\r\n        });\r\n    } else {\r\n      this.setState({\r\n        loading: false,\r\n      });\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const { isLoggedIn, message } = this.props;\r\n\r\n    if (isLoggedIn) {\r\n      return <Redirect to=\"/profile\" />;\r\n    }\r\n\r\n    return (\r\n      <div className=\"col-md-12\">\r\n        <div className=\"card card-container\">\r\n          <img\r\n            src=\"//ssl.gstatic.com/accounts/ui/avatar_2x.png\"\r\n            alt=\"profile-img\"\r\n            className=\"profile-img-card\"\r\n          />\r\n\r\n          <Form\r\n            onSubmit={this.handleLogin}\r\n            ref={(c) => {\r\n              this.form = c;\r\n            }}\r\n          >\r\n            <div className=\"form-group\">\r\n              <label htmlFor=\"username\">Username</label>\r\n              <Input\r\n                type=\"text\"\r\n                className=\"form-control\"\r\n                name=\"username\"\r\n                value={this.state.username}\r\n                onChange={this.onChangeUsername}\r\n                validations={[required]}\r\n              />\r\n            </div>\r\n\r\n            <div className=\"form-group\">\r\n              <label htmlFor=\"password\">Password</label>\r\n              <Input\r\n                type=\"password\"\r\n                className=\"form-control\"\r\n                name=\"password\"\r\n                value={this.state.password}\r\n                onChange={this.onChangePassword}\r\n                validations={[required]}\r\n              />\r\n            </div>\r\n\r\n            <div className=\"form-group\">\r\n              <button\r\n                className=\"btn btn-primary btn-block\"\r\n                disabled={this.state.loading}\r\n              >\r\n                {this.state.loading && (\r\n                  <span className=\"spinner-border spinner-border-sm\"></span>\r\n                )}\r\n                <span>Login</span>\r\n              </button>\r\n            </div>\r\n\r\n            {message && (\r\n              <div className=\"form-group\">\r\n                <div className=\"alert alert-danger\" role=\"alert\">\r\n                  {message}\r\n                </div>\r\n              </div>\r\n            )}\r\n            <CheckButton\r\n              style={{ display: \"none\" }}\r\n              ref={(c) => {\r\n                this.checkBtn = c;\r\n              }}\r\n            />\r\n          </Form>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n  const { isLoggedIn } = state.auth;\r\n  const { message } = state.message;\r\n  return {\r\n    isLoggedIn,\r\n    message,\r\n  };\r\n}\r\n\r\nexport default connect(mapStateToProps)(Login);\r\n","import {\r\n  REGISTER_SUCCESS,\r\n  REGISTER_FAIL,\r\n  LOGIN_SUCCESS,\r\n  LOGIN_FAIL,\r\n  LOGOUT,\r\n  SET_MESSAGE,\r\n} from \"./types\";\r\n\r\nimport AuthService from \"../services/auth.service\";\r\n\r\nexport const register = (username, email, password) => (dispatch) => {\r\n  return AuthService.register(username, email, password).then(\r\n    (response) => {\r\n      dispatch({\r\n        type: REGISTER_SUCCESS,\r\n      });\r\n\r\n      dispatch({\r\n        type: SET_MESSAGE,\r\n        payload: response.data.message,\r\n      });\r\n\r\n      return Promise.resolve();\r\n    },\r\n    (error) => {\r\n      const message =\r\n        (error.response &&\r\n          error.response.data &&\r\n          error.response.data.message) ||\r\n        error.message ||\r\n        error.toString();\r\n\r\n      dispatch({\r\n        type: REGISTER_FAIL,\r\n      });\r\n\r\n      dispatch({\r\n        type: SET_MESSAGE,\r\n        payload: message,\r\n      });\r\n\r\n      return Promise.reject();\r\n    }\r\n  );\r\n};\r\n\r\nexport const login = (username, password) => (dispatch) => {\r\n  return AuthService.login(username, password).then(\r\n    (data) => {\r\n      dispatch({\r\n        type: LOGIN_SUCCESS,\r\n        payload: { user: data },\r\n      });\r\n\r\n      return Promise.resolve();\r\n    },\r\n    (error) => {\r\n      const message =\r\n        (error.response &&\r\n          error.response.data &&\r\n          error.response.data.message) ||\r\n        error.message ||\r\n        error.toString();\r\n\r\n      dispatch({\r\n        type: LOGIN_FAIL,\r\n      });\r\n\r\n      dispatch({\r\n        type: SET_MESSAGE,\r\n        payload: message,\r\n      });\r\n\r\n      return Promise.reject();\r\n    }\r\n  );\r\n};\r\n\r\nexport const logout = () => (dispatch) => {\r\n  AuthService.logout();\r\n\r\n  dispatch({\r\n    type: LOGOUT,\r\n  });\r\n};\r\n","import React, { Component } from \"react\";\r\nimport Form from \"react-validation/build/form\";\r\nimport Input from \"react-validation/build/input\";\r\nimport CheckButton from \"react-validation/build/button\";\r\nimport { isEmail } from \"validator\";\r\n\r\nimport { connect } from \"react-redux\";\r\nimport { register } from \"../actions/auth\";\r\n\r\nconst required = (value) => {\r\n  if (!value) {\r\n    return (\r\n      <div className=\"alert alert-danger\" role=\"alert\">\r\n        This field is required!\r\n      </div>\r\n    );\r\n  }\r\n};\r\n\r\nconst email = (value) => {\r\n  if (!isEmail(value)) {\r\n    return (\r\n      <div className=\"alert alert-danger\" role=\"alert\">\r\n        This is not a valid email.\r\n      </div>\r\n    );\r\n  }\r\n};\r\n\r\nconst vusername = (value) => {\r\n  if (value.length < 3 || value.length > 20) {\r\n    return (\r\n      <div className=\"alert alert-danger\" role=\"alert\">\r\n        The username must be between 3 and 20 characters.\r\n      </div>\r\n    );\r\n  }\r\n};\r\n\r\nconst vpassword = (value) => {\r\n  if (value.length < 6 || value.length > 40) {\r\n    return (\r\n      <div className=\"alert alert-danger\" role=\"alert\">\r\n        The password must be between 6 and 40 characters.\r\n      </div>\r\n    );\r\n  }\r\n};\r\n\r\nclass Register extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.handleRegister = this.handleRegister.bind(this);\r\n    this.onChangeUsername = this.onChangeUsername.bind(this);\r\n    this.onChangeEmail = this.onChangeEmail.bind(this);\r\n    this.onChangePassword = this.onChangePassword.bind(this);\r\n\r\n    this.state = {\r\n      username: \"\",\r\n      email: \"\",\r\n      password: \"\",\r\n      successful: false,\r\n    };\r\n  }\r\n\r\n  onChangeUsername(e) {\r\n    this.setState({\r\n      username: e.target.value,\r\n    });\r\n  }\r\n\r\n  onChangeEmail(e) {\r\n    this.setState({\r\n      email: e.target.value,\r\n    });\r\n  }\r\n\r\n  onChangePassword(e) {\r\n    this.setState({\r\n      password: e.target.value,\r\n    });\r\n  }\r\n\r\n  handleRegister(e) {\r\n    e.preventDefault();\r\n\r\n    this.setState({\r\n      successful: false,\r\n    });\r\n\r\n    this.form.validateAll();\r\n\r\n    if (this.checkBtn.context._errors.length === 0) {\r\n      this.props\r\n        .dispatch(\r\n          register(this.state.username, this.state.email, this.state.password)\r\n        )\r\n        .then(() => {\r\n          this.setState({\r\n            successful: true,\r\n          });\r\n        })\r\n        .catch(() => {\r\n          this.setState({\r\n            successful: false,\r\n          });\r\n        });\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const { message } = this.props;\r\n\r\n    return (\r\n      <div className=\"col-md-12\">\r\n        <div className=\"card card-container\">\r\n          <img\r\n            src=\"//ssl.gstatic.com/accounts/ui/avatar_2x.png\"\r\n            alt=\"profile-img\"\r\n            className=\"profile-img-card\"\r\n          />\r\n\r\n          <Form\r\n            onSubmit={this.handleRegister}\r\n            ref={(c) => {\r\n              this.form = c;\r\n            }}\r\n          >\r\n            {!this.state.successful && (\r\n              <div>\r\n                <div className=\"form-group\">\r\n                  <label htmlFor=\"username\">Username</label>\r\n                  <Input\r\n                    type=\"text\"\r\n                    className=\"form-control\"\r\n                    name=\"username\"\r\n                    value={this.state.username}\r\n                    onChange={this.onChangeUsername}\r\n                    validations={[required, vusername]}\r\n                  />\r\n                </div>\r\n\r\n                <div className=\"form-group\">\r\n                  <label htmlFor=\"email\">Email</label>\r\n                  <Input\r\n                    type=\"text\"\r\n                    className=\"form-control\"\r\n                    name=\"email\"\r\n                    value={this.state.email}\r\n                    onChange={this.onChangeEmail}\r\n                    validations={[required, email]}\r\n                  />\r\n                </div>\r\n\r\n                <div className=\"form-group\">\r\n                  <label htmlFor=\"password\">Password</label>\r\n                  <Input\r\n                    type=\"password\"\r\n                    className=\"form-control\"\r\n                    name=\"password\"\r\n                    value={this.state.password}\r\n                    onChange={this.onChangePassword}\r\n                    validations={[required, vpassword]}\r\n                  />\r\n                </div>\r\n\r\n                <div className=\"form-group\">\r\n                  <button className=\"btn btn-primary btn-block\">Sign Up</button>\r\n                </div>\r\n              </div>\r\n            )}\r\n\r\n            {message && (\r\n              <div className=\"form-group\">\r\n                <div\r\n                  className={\r\n                    this.state.successful\r\n                      ? \"alert alert-success\"\r\n                      : \"alert alert-danger\"\r\n                  }\r\n                  role=\"alert\"\r\n                >\r\n                  {message}\r\n                </div>\r\n              </div>\r\n            )}\r\n            <CheckButton\r\n              style={{ display: \"none\" }}\r\n              ref={(c) => {\r\n                this.checkBtn = c;\r\n              }}\r\n            />\r\n          </Form>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n  const { message } = state.message;\r\n  return {\r\n    message,\r\n  };\r\n}\r\n\r\nexport default connect(mapStateToProps)(Register);\r\n","export default function authHeader() {\r\n  const user = JSON.parse(localStorage.getItem(\"user\"));\r\n\r\n  if (user && user.accessToken) {\r\n    // For Spring Boot back-end\r\n    return { Authorization: \"Bearer \" + user.accessToken };\r\n\r\n    // for Node.js Express back-end\r\n    //  return { \"x-access-token\": user.accessToken };\r\n  } else {\r\n    return {};\r\n  }\r\n}\r\n","import axios from \"axios\";\r\nimport authHeader from \"./auth-header\";\r\n\r\nconst API_URL = \"http://localhost:8080/api/test/\";\r\n\r\nclass UserService {\r\n  getPublicContent() {\r\n    return axios.get(API_URL + \"all\");\r\n  }\r\n\r\n  getUserBoard() {\r\n    return axios.get(API_URL + \"user\", { headers: authHeader() });\r\n  }\r\n\r\n  getModeratorBoard() {\r\n    return axios.get(API_URL + \"mod\", { headers: authHeader() });\r\n  }\r\n\r\n  getAdminBoard() {\r\n    return axios.get(API_URL + \"admin\", { headers: authHeader() });\r\n  }\r\n}\r\n\r\nexport default new UserService();\r\n","import React, { Component } from \"react\";\r\n\r\nimport UserService from \"../services/user.service\";\r\n\r\nexport default class Home extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      content: \"\",\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    UserService.getPublicContent().then(\r\n      (response) => {\r\n        this.setState({\r\n          content: response.data,\r\n        });\r\n      },\r\n      (error) => {\r\n        this.setState({\r\n          content:\r\n            (error.response && error.response.data) ||\r\n            error.message ||\r\n            error.toString(),\r\n        });\r\n      }\r\n    );\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"container\">\r\n        <header className=\"jumbotron\">\r\n          <h3>{this.state.content}</h3>\r\n        </header>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\r\nimport { Redirect } from \"react-router-dom\";\r\nimport { connect } from \"react-redux\";\r\n\r\nclass Profile extends Component {\r\n  render() {\r\n    const { user: currentUser } = this.props;\r\n\r\n    if (!currentUser) {\r\n      return <Redirect to=\"/login\" />;\r\n    }\r\n\r\n    return (\r\n      <div className=\"container\">\r\n        <header className=\"jumbotron\">\r\n          <h3>\r\n            <strong>{currentUser.username}</strong> Profile\r\n          </h3>\r\n        </header>\r\n\r\n        <p>\r\n          <strong>Id:</strong> {currentUser.id}\r\n        </p>\r\n        <p>\r\n          <strong>Email:</strong> {currentUser.username}\r\n        </p>\r\n        <p>\r\n          <strong>Email:</strong> {currentUser.email}\r\n        </p>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n  const { user } = state.auth;\r\n  return {\r\n    user,\r\n  };\r\n}\r\n\r\nexport default connect(mapStateToProps)(Profile);\r\n","import React, { Component } from \"react\";\r\n\r\nimport UserService from \"../services/user.service\";\r\n\r\nexport default class BoardUser extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      content: \"\",\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    UserService.getUserBoard().then(\r\n      (response) => {\r\n        this.setState({\r\n          content: response.data,\r\n        });\r\n      },\r\n      (error) => {\r\n        this.setState({\r\n          content:\r\n            (error.response &&\r\n              error.response.data &&\r\n              error.response.data.message) ||\r\n            error.message ||\r\n            error.toString(),\r\n        });\r\n      }\r\n    );\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"container\">\r\n        <header className=\"jumbotron\">\r\n          <h3>{this.state.content}</h3>\r\n        </header>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\r\n\r\nimport UserService from \"../services/user.service\";\r\n\r\nexport default class BoardModerator extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      content: \"\",\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    UserService.getModeratorBoard().then(\r\n      (response) => {\r\n        this.setState({\r\n          content: response.data,\r\n        });\r\n      },\r\n      (error) => {\r\n        this.setState({\r\n          content:\r\n            (error.response &&\r\n              error.response.data &&\r\n              error.response.data.message) ||\r\n            error.message ||\r\n            error.toString(),\r\n        });\r\n      }\r\n    );\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"container\">\r\n        <header className=\"jumbotron\">\r\n          <h3>{this.state.content}</h3>\r\n        </header>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import axios from \"axios\";\r\nimport authHeader from \"./auth-header\";\r\n\r\nconst API_URL = \"http://localhost:8080/api/test/users\";\r\n\r\nclass AllUsersService {\r\n  getAllUsers() {\r\n    return axios.get(API_URL, { headers: authHeader() });\r\n  }\r\n\r\n  getUserById(userId) {\r\n    return axios.get(API_URL + \"/\" + userId, { headers: authHeader() });\r\n  }\r\n\r\n  createNewUser(username, email, password) {\r\n    return axios.post(\r\n      API_URL,\r\n      {\r\n        username,\r\n        email,\r\n        password,\r\n      },\r\n      { headers: authHeader() }\r\n    );\r\n  }\r\n\r\n  deleteUser(userId) {\r\n    return axios.delete(API_URL + \"/\" + userId, { headers: authHeader() });\r\n  }\r\n\r\n  updateUser(username, email, password, userId) {\r\n    console.log(username, email, password, userId);\r\n    return axios.put(\r\n      API_URL + \"/\" + userId,\r\n      {\r\n        username,\r\n        email,\r\n        password,\r\n      },\r\n      { headers: authHeader() }\r\n    );\r\n  }\r\n}\r\n\r\nexport default new AllUsersService();\r\n","import React, { Component } from \"react\";\r\nimport { Router, Switch, Route, Link } from \"react-router-dom\";\r\nimport AllUsersService from \"../services/all-users.service\";\r\nimport { connect } from \"react-redux\";\r\nimport { getUsers } from \"../actions/users\";\r\n\r\nclass BoardAdmin extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      content: \"\",\r\n      listOfUsers: [],\r\n      sortingOrder: \"DESC\",\r\n      selected: {},\r\n      selectAll: 0,\r\n    };\r\n  }\r\n\r\n  sortBy(sortedKey) {\r\n    const data = this.state.listOfUsers;\r\n    let sortingOrder = this.state.sortingOrder;\r\n\r\n    if (sortedKey === \"id\") {\r\n      if (sortingOrder === \"ASC\") {\r\n        sortingOrder = \"DESC\";\r\n        data.sort((a, b) => b.id - a.id);\r\n      } else {\r\n        sortingOrder = \"ASC\";\r\n        data.sort((a, b) => a.id - b.id);\r\n      }\r\n      return this.setState({ data, sortingOrder });\r\n    }\r\n\r\n    if (sortingOrder === \"ASC\") {\r\n      sortingOrder = \"DESC\";\r\n      data.sort((a, b) => b[sortedKey].localeCompare(a[sortedKey]));\r\n    } else {\r\n      sortingOrder = \"ASC\";\r\n      data.sort((a, b) => a[sortedKey].localeCompare(b[sortedKey]));\r\n    }\r\n    this.setState({ data, sortingOrder });\r\n  }\r\n\r\n  toggleRow(id) {\r\n    const newSelected = Object.assign({}, this.state.selected);\r\n    newSelected[id] = !this.state.selected[id];\r\n    this.setState({\r\n      selected: newSelected,\r\n      selectAll: 2,\r\n    });\r\n    console.log(this.state.selectAll);\r\n  }\r\n\r\n  toggleSelectAll() {\r\n    let newSelected = {};\r\n    if (this.state.selectAll === 0) {\r\n      this.state.listOfUsers.forEach((x) => {\r\n        newSelected[x.id] = true;\r\n      });\r\n    }\r\n\r\n    this.setState({\r\n      selected: newSelected,\r\n      selectAll: this.state.selectAll === 0 ? 1 : 0,\r\n    });\r\n    console.log(newSelected);\r\n    console.log(this.state.selectAll);\r\n  }\r\n\r\n  componentDidMount() {\r\n    AllUsersService.getAllUsers().then(\r\n      (response) => {\r\n        const tempListOfUsers = [];\r\n        response.data.forEach((res) => {\r\n          console.log(res);\r\n          tempListOfUsers.push(res);\r\n        });\r\n        this.setState({\r\n          listOfUsers: tempListOfUsers,\r\n        });\r\n      },\r\n      (error) => {\r\n        this.setState({\r\n          content:\r\n            (error.response &&\r\n              error.response.data &&\r\n              error.response.data.message) ||\r\n            error.message ||\r\n            error.toString(),\r\n        });\r\n      }\r\n    );\r\n  }\r\n\r\n  deleteUser = (id) => {\r\n    let numberofObjects = Object.keys(this.state.selected).length;\r\n    let objKeys = Object.keys(this.state.selected);\r\n    if (numberofObjects === 0) {\r\n      AllUsersService.deleteUser(id);\r\n    } else {\r\n      for (var i = 0; i < numberofObjects; i++) {\r\n        objKeys.forEach((key) => {\r\n          AllUsersService.deleteUser(key);\r\n        });\r\n      }\r\n    }\r\n\r\n    window.location.reload();\r\n  };\r\n\r\n  updateUser = () => {};\r\n\r\n  render() {\r\n    let { listOfUsers } = this.state;\r\n    return (\r\n      <div className=\"container\">\r\n        <br></br>\r\n        <h3>{this.state.content}</h3>\r\n        <Link\r\n          to={\"/add\"}\r\n          className=\"navbar-brand\"\r\n          className=\"alert alert-success\"\r\n        >\r\n          Add new Voter\r\n        </Link>\r\n        <br></br>\r\n        <br></br>\r\n        <div className=\"table-responsive\">\r\n          <table className=\"table\">\r\n            <thead>\r\n              <tr>\r\n                <th scope=\"col-sm\">\r\n                  {\" \"}\r\n                  <input\r\n                    type=\"checkbox\"\r\n                    className=\"checkbox\"\r\n                    aria-label=\"Checkbox for following text input\"\r\n                    checked={this.state.selectAll === 1}\r\n                    ref={(input) => {\r\n                      if (input) {\r\n                        input.indeterminate = this.state.selectAll === 2;\r\n                      }\r\n                    }}\r\n                    onChange={() => this.toggleSelectAll()}\r\n                  />\r\n                </th>\r\n                <th\r\n                  scope=\"col-sm\"\r\n                  onClick={() => this.sortBy(\"id\")}\r\n                  style={{\r\n                    cursor: \"pointer\",\r\n                  }}\r\n                >\r\n                  ID\r\n                </th>\r\n                <th\r\n                  scope=\"col-sm\"\r\n                  onClick={() => this.sortBy(\"username\")}\r\n                  style={{\r\n                    cursor: \"pointer\",\r\n                  }}\r\n                >\r\n                  Username\r\n                </th>\r\n                <th\r\n                  scope=\"col-sm\"\r\n                  onClick={() => this.sortBy(\"email\")}\r\n                  style={{\r\n                    cursor: \"pointer\",\r\n                  }}\r\n                >\r\n                  Email\r\n                </th>\r\n                <th scope=\"col-sm\"> Actions</th>\r\n              </tr>\r\n            </thead>\r\n            <tbody>\r\n              {listOfUsers.map((user, _) => (\r\n                <tr key={user.id}>\r\n                  <td>\r\n                    {\" \"}\r\n                    <input\r\n                      type=\"checkbox\"\r\n                      className=\"checkbox\"\r\n                      aria-label=\"Checkbox for following text input\"\r\n                      checked={this.state.selected[user.id] === true}\r\n                      onChange={() => this.toggleRow(user.id)}\r\n                    />\r\n                  </td>\r\n                  <th scope=\"row\">{user.id}</th>\r\n                  <td>{user.username}</td>\r\n                  <td>{user.email}</td>\r\n                  <td>\r\n                    <button\r\n                      className=\"btn btn-danger\"\r\n                      onClick={() => {\r\n                        if (\r\n                          window.confirm(\r\n                            \"Are you sure you wish to delete this item?\"\r\n                          )\r\n                        )\r\n                          this.deleteUser(user.id);\r\n                      }}\r\n                    >\r\n                      Delete\r\n                    </button>{\" \"}\r\n                    <Link to={`/users/${user.id}`} className=\"btn btn-warning\">\r\n                      Update{\" \"}\r\n                    </Link>\r\n                  </td>\r\n                </tr>\r\n              ))}\r\n            </tbody>\r\n          </table>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default BoardAdmin;\r\n","import React, { Component } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nimport AllUsersService from \"../services/all-users.service\";\r\n\r\nexport default class UserDetails extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      username: \"\",\r\n      password: \"\",\r\n      email: \"\",\r\n      loading: false,\r\n      id: \"\",\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.setState({\r\n      loading: true,\r\n    });\r\n    const id = this.props.match.params.id;\r\n    console.log(id);\r\n    AllUsersService.getUserById(id).then(\r\n      (response) => {\r\n        console.log(response.data);\r\n        this.setState({\r\n          username: response.data.username,\r\n          email: response.data.email,\r\n          password: response.data.password,\r\n          loading: false,\r\n          id: id,\r\n        });\r\n      },\r\n      (error) => {\r\n        this.setState({\r\n          content:\r\n            (error.response &&\r\n              error.response.data &&\r\n              error.response.data.message) ||\r\n            error.message ||\r\n            error.toString(),\r\n        });\r\n      }\r\n    );\r\n  }\r\n\r\n  onChangeUsername(e) {\r\n    this.setState({\r\n      username: e.target.value,\r\n    });\r\n  }\r\n\r\n  onChangePassword(e) {\r\n    this.setState({\r\n      password: e.target.value,\r\n    });\r\n  }\r\n\r\n  onChangeEmail(e) {\r\n    this.setState({\r\n      email: e.target.value,\r\n    });\r\n  }\r\n\r\n  saveUser = () => {\r\n    const { username, email, password, id } = this.state;\r\n    console.log(username, email, password, id);\r\n    this.setState({\r\n      loading: true,\r\n    });\r\n    AllUsersService.updateUser(username, email, password, id);\r\n\r\n    window.location.reload();\r\n  };\r\n\r\n  render() {\r\n    const { username, email, password, loading } = this.state;\r\n    return (\r\n      <div>\r\n        {loading ? (\r\n          <img src=\"https://media3.giphy.com/media/3oEjI6SIIHBdRxXI40/200.gif\" />\r\n        ) : (\r\n          <div className=\"container jumbotron\">\r\n            <form>\r\n              <div className=\"form-group\">\r\n                <label htmlFor=\"exampleInputEmail1\">User Name</label>\r\n                <input\r\n                  type=\"name\"\r\n                  className=\"form-control\"\r\n                  id=\"exampleName1\"\r\n                  aria-describedby=\"emailHelp\"\r\n                  value={username}\r\n                  onChange={(username) => this.onChangeUsername(username)}\r\n                />\r\n              </div>\r\n              <div className=\"form-group\">\r\n                <label htmlFor=\"exampleInputEmail1\">Email address</label>\r\n                <input\r\n                  type=\"email\"\r\n                  className=\"form-control\"\r\n                  id=\"exampleInputEmail1\"\r\n                  aria-describedby=\"emailHelp\"\r\n                  value={email}\r\n                  onChange={(email) => this.onChangeEmail(email)}\r\n                />\r\n                <small id=\"emailHelp\" className=\"form-text text-muted\">\r\n                  We'll never share your email with anyone else.\r\n                </small>\r\n              </div>\r\n              <div className=\"form-group\">\r\n                <label htmlFor=\"exampleInputPassword1\">Password</label>\r\n                <input\r\n                  type=\"text\"\r\n                  className=\"form-control\"\r\n                  id=\"exampleInputPassword1\"\r\n                  value={password}\r\n                  onChange={(password) => this.onChangePassword(password)}\r\n                />\r\n              </div>\r\n\r\n              <div onClick={this.saveUser} className=\"btn btn-success\">\r\n                Save\r\n              </div>\r\n              <Link\r\n                to={\"/admin\"}\r\n                className=\"btn btn-primary\"\r\n                style={{ float: \"right\" }}\r\n              >\r\n                Go Back\r\n              </Link>\r\n            </form>\r\n          </div>\r\n        )}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nimport Form from \"react-validation/build/form\";\r\nimport Input from \"react-validation/build/input\";\r\nimport CheckButton from \"react-validation/build/button\";\r\nimport { isEmail } from \"validator\";\r\n\r\nimport { connect } from \"react-redux\";\r\nimport { createNewUser } from \"../actions/users\";\r\n\r\nconst required = (value) => {\r\n  if (!value) {\r\n    return (\r\n      <div className=\"alert alert-danger\" role=\"alert\">\r\n        This field is required!\r\n      </div>\r\n    );\r\n  }\r\n};\r\n\r\nconst vemail = (value) => {\r\n  if (!isEmail(value)) {\r\n    return (\r\n      <div className=\"alert alert-danger\" role=\"alert\">\r\n        This is not a valid email.\r\n      </div>\r\n    );\r\n  }\r\n};\r\n\r\nconst vusername = (value) => {\r\n  if (value.length < 4 || value.length > 20) {\r\n    return (\r\n      <div className=\"alert alert-danger\" role=\"alert\">\r\n        The username must be between 4 and 20 characters.\r\n      </div>\r\n    );\r\n  }\r\n};\r\n\r\nconst vpassword = (value) => {\r\n  if (value.length < 6 || value.length > 40) {\r\n    return (\r\n      <div className=\"alert alert-danger\" role=\"alert\">\r\n        The password must be between 6 and 40 characters.\r\n      </div>\r\n    );\r\n  }\r\n};\r\n\r\nclass AddUser extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      username: \"demo69\",\r\n      password: \"demodemo\",\r\n      email: \"demo@demop.com\",\r\n      loading: true,\r\n      successful: false,\r\n    };\r\n    this.handleAdd = this.handleAdd.bind(this);\r\n    this.onChangeUsername = this.onChangeUsername.bind(this);\r\n    this.onChangeEmail = this.onChangeEmail.bind(this);\r\n    this.onChangePassword = this.onChangePassword.bind(this);\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.setState({\r\n      loading: false,\r\n    });\r\n  }\r\n\r\n  onChangeUsername(e) {\r\n    this.setState({\r\n      username: e.target.value,\r\n    });\r\n  }\r\n\r\n  onChangePassword(e) {\r\n    this.setState({\r\n      password: e.target.value,\r\n    });\r\n  }\r\n\r\n  onChangeEmail(e) {\r\n    this.setState({\r\n      email: e.target.value,\r\n    });\r\n  }\r\n\r\n  handleAdd(e) {\r\n    e.preventDefault();\r\n\r\n    this.setState({\r\n      successful: false,\r\n    });\r\n\r\n    this.form.validateAll();\r\n\r\n    if (this.checkBtn.context._errors.length === 0) {\r\n      this.props\r\n        .dispatch(\r\n          createNewUser(\r\n            this.state.username,\r\n            this.state.email,\r\n            this.state.password\r\n          )\r\n        )\r\n        .then(() => {\r\n          this.setState({\r\n            successful: true,\r\n          });\r\n          window.location.reload();\r\n        })\r\n        .catch(() => {\r\n          this.setState({\r\n            successful: false,\r\n          });\r\n        });\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const { loading } = this.state;\r\n    const { message } = this.props;\r\n    return (\r\n      <div>\r\n        {loading === false ? (\r\n          <div className=\"container jumbotron\">\r\n            <Form\r\n              onSubmit={this.handleAdd}\r\n              ref={(c) => {\r\n                this.form = c;\r\n              }}\r\n            >\r\n              {!this.state.successful && (\r\n                <div>\r\n                  <div className=\"form-group\">\r\n                    <label htmlFor=\"username\">Username</label>\r\n                    <Input\r\n                      type=\"text\"\r\n                      className=\"form-control\"\r\n                      name=\"username\"\r\n                      value={this.state.username}\r\n                      onChange={this.onChangeUsername}\r\n                      validations={[required, vusername]}\r\n                    />\r\n                  </div>\r\n\r\n                  <div className=\"form-group\">\r\n                    <label htmlFor=\"email\">Email</label>\r\n                    <Input\r\n                      type=\"text\"\r\n                      className=\"form-control\"\r\n                      name=\"email\"\r\n                      value={this.state.email}\r\n                      onChange={this.onChangeEmail}\r\n                      validations={[required, vemail]}\r\n                    />\r\n                  </div>\r\n\r\n                  <div className=\"form-group\">\r\n                    <label htmlFor=\"password\">Password</label>\r\n                    <Input\r\n                      type=\"password\"\r\n                      className=\"form-control\"\r\n                      name=\"password\"\r\n                      value={this.state.password}\r\n                      onChange={this.onChangePassword}\r\n                      validations={[required, vpassword]}\r\n                    />\r\n                  </div>\r\n\r\n                  <button className=\"btn btn-success\">Save</button>\r\n                  <span> </span>\r\n                  <Link\r\n                    to={\"/admin\"}\r\n                    className=\"btn btn-primary\"\r\n                    style={{ float: \"right\" }}\r\n                  >\r\n                    Go Back\r\n                  </Link>\r\n                </div>\r\n              )}\r\n\r\n              {message && (\r\n                <div className=\"form-group\">\r\n                  <div\r\n                    className={\r\n                      this.state.successful\r\n                        ? \"alert alert-success\"\r\n                        : \"alert alert-danger\"\r\n                    }\r\n                    role=\"alert\"\r\n                  >\r\n                    {message}\r\n                  </div>\r\n                </div>\r\n              )}\r\n              <CheckButton\r\n                style={{ display: \"none\" }}\r\n                ref={(c) => {\r\n                  this.checkBtn = c;\r\n                }}\r\n              />\r\n            </Form>\r\n          </div>\r\n        ) : (\r\n          <img src=\"https://media3.giphy.com/media/3oEjI6SIIHBdRxXI40/200.gif\" />\r\n        )}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n  const { message } = state.message;\r\n  return {\r\n    message,\r\n  };\r\n}\r\n\r\nexport default connect(mapStateToProps)(AddUser);\r\n","import {\r\n  GET_USERS,\r\n  GET_USER_BY_ID,\r\n  ADD_USER,\r\n  UPDATE_USER,\r\n  DELETE_USER,\r\n  SET_MESSAGE,\r\n} from \"../actions/types\";\r\n\r\nimport AllUsersService from \"../services/all-users.service\";\r\n\r\n//////////////////////////////////////////////////////////////Get users\r\nexport const getUsers = () => (dispatch) => {\r\n  return AllUsersService.getAllUsers().then(\r\n    (users) => {\r\n      dispatch({\r\n        type: GET_USERS,\r\n        payload: users,\r\n      });\r\n\r\n      return Promise.resolve();\r\n    },\r\n    (error) => {\r\n      const message =\r\n        (error.response &&\r\n          error.response.data &&\r\n          error.response.data.message) ||\r\n        error.message ||\r\n        error.toString();\r\n\r\n      dispatch({\r\n        type: SET_MESSAGE,\r\n        payload: message,\r\n      });\r\n\r\n      return Promise.reject();\r\n    }\r\n  );\r\n};\r\n\r\n//////////////////////////////////////////////////////////////Get users by id\r\nexport const getUsersById = (userId) => (dispatch) => {\r\n  return AllUsersService.getUserById(userId).then(\r\n    (user) => {\r\n      dispatch({\r\n        type: GET_USER_BY_ID,\r\n        payload: user,\r\n      });\r\n\r\n      return Promise.resolve();\r\n    },\r\n    (error) => {\r\n      const message =\r\n        (error.response &&\r\n          error.response.data &&\r\n          error.response.data.message) ||\r\n        error.message ||\r\n        error.toString();\r\n\r\n      dispatch({\r\n        type: SET_MESSAGE,\r\n        payload: message,\r\n      });\r\n\r\n      return Promise.reject();\r\n    }\r\n  );\r\n};\r\n\r\n////////////////////////////////////////////////////////////////////////////////Create User\r\nexport const createNewUser = (username, email, password) => (dispatch) => {\r\n  return AllUsersService.createNewUser(username, email, password).then(\r\n    (response) => {\r\n      dispatch({\r\n        type: ADD_USER,\r\n      });\r\n\r\n      dispatch({\r\n        type: SET_MESSAGE,\r\n        payload: response.data.message,\r\n      });\r\n\r\n      return Promise.resolve();\r\n    },\r\n    (error) => {\r\n      const message =\r\n        (error.response &&\r\n          error.response.data &&\r\n          error.response.data.message) ||\r\n        error.message ||\r\n        error.toString();\r\n\r\n      dispatch({\r\n        type: SET_MESSAGE,\r\n        payload: message,\r\n      });\r\n\r\n      return Promise.reject();\r\n    }\r\n  );\r\n};\r\n\r\n////////////////////////////////////////////////////////////////////////////////Create User\r\nexport const updateUser = (username, email, password, userId) => (dispatch) => {\r\n  return AllUsersService.updateUser(username, email, password, userId).then(\r\n    (response) => {\r\n      dispatch({\r\n        type: UPDATE_USER,\r\n        payload: response,\r\n      });\r\n\r\n      dispatch({\r\n        type: SET_MESSAGE,\r\n        payload: response.data.message,\r\n      });\r\n\r\n      return Promise.resolve();\r\n    },\r\n    (error) => {\r\n      const message =\r\n        (error.response &&\r\n          error.response.data &&\r\n          error.response.data.message) ||\r\n        error.message ||\r\n        error.toString();\r\n\r\n      dispatch({\r\n        type: SET_MESSAGE,\r\n        payload: message,\r\n      });\r\n\r\n      return Promise.reject();\r\n    }\r\n  );\r\n};\r\n","import { createBrowserHistory } from \"history\";\r\n\r\nexport const history = createBrowserHistory();\r\n","import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { Router, Switch, Route, Link, HashRouter } from \"react-router-dom\";\n\nimport \"./App.css\";\n\nimport Login from \"./components/login.component\";\nimport Register from \"./components/register.component\";\nimport Home from \"./components/home.component\";\nimport Profile from \"./components/profile.component\";\nimport BoardUser from \"./components/board-user.component\";\nimport BoardModerator from \"./components/board-moderator.component\";\nimport BoardAdmin from \"./components/board-admin.component\";\nimport UserDetails from \"./components/user-details.component\";\nimport AddUser from \"./components/add-new-user.component\";\n\nimport { logout } from \"./actions/auth\";\nimport { clearMessage } from \"./actions/message\";\n\nimport { history } from \"./helpers/history\";\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.logOut = this.logOut.bind(this);\n\n    this.state = {\n      showModeratorBoard: false,\n      showAdminBoard: false,\n      currentUser: undefined,\n    };\n\n    history.listen((location) => {\n      props.dispatch(clearMessage()); // clear message when changing location\n    });\n  }\n\n  componentDidMount() {\n    const user = this.props.user;\n\n    if (user) {\n      this.setState({\n        currentUser: user,\n        showModeratorBoard: user.roles.includes(\"ROLE_MODERATOR\"),\n        showAdminBoard: user.roles.includes(\"ROLE_ADMIN\"),\n      });\n    }\n  }\n\n  logOut() {\n    this.props.dispatch(logout());\n  }\n\n  render() {\n    const { currentUser, showModeratorBoard, showAdminBoard } = this.state;\n\n    return (\n      <HashRouter history={history}>\n        <div style={{ width: \"100%\" }}>\n          <nav className=\"navbar navbar-expand-lg navbar-dark bg-dark\">\n            <Link to={\"/\"} className=\"navbar-brand\">\n              Logo\n            </Link>\n            <button\n              className=\"navbar-toggler\"\n              type=\"button\"\n              data-toggle=\"collapse\"\n              data-target=\"#navbarNav\"\n              aria-controls=\"navbarNav\"\n              aria-expanded=\"false\"\n              aria-label=\"Toggle navigation\"\n            >\n              <span className=\"navbar-toggler-icon\"></span>\n            </button>\n            <div className=\"collapse navbar-collapse\" id=\"navbarNav\">\n              <ul className=\"navbar-nav\">\n                {showModeratorBoard && (\n                  <li className=\"nav-item\">\n                    <Link to={\"/mod\"} className=\"nav-link\">\n                      Moderator Board\n                    </Link>\n                  </li>\n                )}\n\n                {showAdminBoard && (\n                  <li className=\"nav-item\">\n                    <Link to={\"/admin\"} className=\"nav-link\">\n                      Admin Board\n                    </Link>\n                  </li>\n                )}\n\n                {currentUser ? (\n                  <div className=\"navbar-nav ml-auto\">\n                    <li className=\"nav-item\">\n                      <Link to={\"/profile\"} className=\"nav-link\">\n                        {currentUser.username}\n                      </Link>\n                    </li>\n                    <li className=\"nav-item\">\n                      <a\n                        href=\"/login\"\n                        className=\"nav-link\"\n                        onClick={this.logOut}\n                      >\n                        LogOut\n                      </a>\n                    </li>\n                  </div>\n                ) : (\n                  <div className=\"navbar-nav ml-auto\">\n                    <li className=\"nav-item\">\n                      <Link to={\"/login\"} className=\"nav-link\">\n                        Login\n                      </Link>\n                    </li>\n\n                    <li className=\"nav-item\">\n                      <Link to={\"/register\"} className=\"nav-link\">\n                        Sign Up\n                      </Link>\n                    </li>\n                  </div>\n                )}\n              </ul>\n            </div>\n          </nav>\n\n          <div className=\"container mt-3\">\n            <Switch>\n              <Route exact path={[\"/\", \"/home\"]} component={Home} />\n              <Route exact path=\"/login\" component={Login} />\n              <Route exact path=\"/register\" component={Register} />\n              <Route exact path=\"/profile\" component={Profile} />\n              <Route path=\"/user\" component={BoardUser} />\n              <Route path=\"/mod\" component={BoardModerator} />\n              <Route path=\"/admin\" component={BoardAdmin} />\n              <Route path=\"/users/:id\" component={UserDetails} />\n              <Route path=\"/add\" component={AddUser} />\n            </Switch>\n          </div>\n        </div>\n      </HashRouter>\n    );\n  }\n}\n\nfunction mapStateToProps(state) {\n  const { user } = state.auth;\n  return {\n    user,\n  };\n}\n\nexport default connect(mapStateToProps)(App);\n","import { SET_MESSAGE, CLEAR_MESSAGE } from \"./types\";\r\n\r\nexport const setMessage = (message) => ({\r\n  type: SET_MESSAGE,\r\n  payload: message,\r\n});\r\n\r\nexport const clearMessage = () => ({\r\n  type: CLEAR_MESSAGE,\r\n});\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { Provider } from \"react-redux\";\nimport store from \"./store\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}